//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.MC;

[assembly: RegisterDocumentType(Profile.CLASS_NAME, typeof(Profile))]

namespace CMS.DocumentEngine.Types.MC
{
    /// <summary>
    /// Represents a content item of type Profile.
    /// </summary>
    public partial class Profile : TreeNode
    {
        #region "Constants and variables"

        /// <summary>
        /// The name of the data class.
        /// </summary>
        public const string CLASS_NAME = "MC.Profile";


        /// <summary>
        /// The instance of the class that provides extended API for working with Profile fields.
        /// </summary>
        private readonly ProfileFields mFields;

        #endregion


        #region "Properties"

        /// <summary>
        /// DoctorProfileID.
        /// </summary>
        [DatabaseIDField]
        public int DoctorProfileID
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("DoctorProfileID"), 0);
            }
            set
            {
                SetValue("DoctorProfileID", value);
            }
        }


        /// <summary>
        /// Image.
        /// </summary>
        [DatabaseField]
        public string Image
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Image"), @"");
            }
            set
            {
                SetValue("Image", value);
            }
        }


        /// <summary>
        /// Title.
        /// </summary>
        [DatabaseField]
        public string Title
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Title"), @"");
            }
            set
            {
                SetValue("Title", value);
            }
        }


        /// <summary>
        /// Badge.
        /// </summary>
        [DatabaseField]
        public bool Badge
        {
            get
            {
                return ValidationHelper.GetBoolean(GetValue("Badge"), true);
            }
            set
            {
                SetValue("Badge", value);
            }
        }


        /// <summary>
        /// Education.
        /// </summary>
        [DatabaseField]
        public string Education
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Education"), @"");
            }
            set
            {
                SetValue("Education", value);
            }
        }


        /// <summary>
        /// DescriptionTitle.
        /// </summary>
        [DatabaseField]
        public string DescriptionTitle
        {
            get
            {
                return ValidationHelper.GetString(GetValue("DescriptionTitle"), @"");
            }
            set
            {
                SetValue("DescriptionTitle", value);
            }
        }


        /// <summary>
        /// Description.
        /// </summary>
        [DatabaseField]
        public string Description
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Description"), @"");
            }
            set
            {
                SetValue("Description", value);
            }
        }


        /// <summary>
        /// Gets an object that provides extended API for working with Profile fields.
        /// </summary>
        [RegisterProperty]
        public ProfileFields Fields
        {
            get
            {
                return mFields;
            }
        }


        /// <summary>
        /// Provides extended API for working with Profile fields.
        /// </summary>
        [RegisterAllProperties]
        public partial class ProfileFields : AbstractHierarchicalObject<ProfileFields>
        {
            /// <summary>
            /// The content item of type Profile that is a target of the extended API.
            /// </summary>
            private readonly Profile mInstance;


            /// <summary>
            /// Initializes a new instance of the <see cref="ProfileFields" /> class with the specified content item of type Profile.
            /// </summary>
            /// <param name="instance">The content item of type Profile that is a target of the extended API.</param>
            public ProfileFields(Profile instance)
            {
                mInstance = instance;
            }


            /// <summary>
            /// DoctorProfileID.
            /// </summary>
            public int DoctorProfileID
            {
                get
                {
                    return mInstance.DoctorProfileID;
                }
                set
                {
                    mInstance.DoctorProfileID = value;
                }
            }


            /// <summary>
            /// Image.
            /// </summary>
            public string Image
            {
                get
                {
                    return mInstance.Image;
                }
                set
                {
                    mInstance.Image = value;
                }
            }


            /// <summary>
            /// Title.
            /// </summary>
            public string Title
            {
                get
                {
                    return mInstance.Title;
                }
                set
                {
                    mInstance.Title = value;
                }
            }


            /// <summary>
            /// Badge.
            /// </summary>
            public bool Badge
            {
                get
                {
                    return mInstance.Badge;
                }
                set
                {
                    mInstance.Badge = value;
                }
            }


            /// <summary>
            /// Education.
            /// </summary>
            public string Education
            {
                get
                {
                    return mInstance.Education;
                }
                set
                {
                    mInstance.Education = value;
                }
            }


            /// <summary>
            /// DescriptionTitle.
            /// </summary>
            public string DescriptionTitle
            {
                get
                {
                    return mInstance.DescriptionTitle;
                }
                set
                {
                    mInstance.DescriptionTitle = value;
                }
            }


            /// <summary>
            /// Description.
            /// </summary>
            public string Description
            {
                get
                {
                    return mInstance.Description;
                }
                set
                {
                    mInstance.Description = value;
                }
            }
        }

        #endregion


        #region "Constructors"

        /// <summary>
        /// Initializes a new instance of the <see cref="Profile" /> class.
        /// </summary>
        public Profile() : base(CLASS_NAME)
        {
            mFields = new ProfileFields(this);
        }

        #endregion
    }
}