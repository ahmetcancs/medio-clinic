//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.MC;

[assembly: RegisterDocumentType(NavigationItem.CLASS_NAME, typeof(NavigationItem))]

namespace CMS.DocumentEngine.Types.MC
{
    /// <summary>
    /// Represents a content item of type NavigationItem.
    /// </summary>
    public partial class NavigationItem : TreeNode
    {
        #region "Constants and variables"

        /// <summary>
        /// The name of the data class.
        /// </summary>
        public const string CLASS_NAME = "MC.NavigationItem";


        /// <summary>
        /// The instance of the class that provides extended API for working with NavigationItem fields.
        /// </summary>
        private readonly NavigationItemFields mFields;

        #endregion


        #region "Properties"

        /// <summary>
        /// NavigationItemID.
        /// </summary>
        [DatabaseIDField]
        public int NavigationItemID
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("NavigationItemID"), 0);
            }
            set
            {
                SetValue("NavigationItemID", value);
            }
        }


        /// <summary>
        /// Gets an object that provides extended API for working with NavigationItem fields.
        /// </summary>
        [RegisterProperty]
        public NavigationItemFields Fields
        {
            get
            {
                return mFields;
            }
        }


        /// <summary>
        /// Provides extended API for working with NavigationItem fields.
        /// </summary>
        [RegisterAllProperties]
        public partial class NavigationItemFields : AbstractHierarchicalObject<NavigationItemFields>
        {
            /// <summary>
            /// The content item of type NavigationItem that is a target of the extended API.
            /// </summary>
            private readonly NavigationItem mInstance;


            /// <summary>
            /// Initializes a new instance of the <see cref="NavigationItemFields" /> class with the specified content item of type NavigationItem.
            /// </summary>
            /// <param name="instance">The content item of type NavigationItem that is a target of the extended API.</param>
            public NavigationItemFields(NavigationItem instance)
            {
                mInstance = instance;
            }


            /// <summary>
            /// NavigationItemID.
            /// </summary>
            public int ID
            {
                get
                {
                    return mInstance.NavigationItemID;
                }
                set
                {
                    mInstance.NavigationItemID = value;
                }
            }


            /// <summary>
            /// Page link.
            /// </summary>
            public IEnumerable<TreeNode> LinkTo
            {
                get
                {
                    return mInstance.GetRelatedDocuments("LinkTo");
                }
            }
        }

        #endregion


        #region "Constructors"

        /// <summary>
        /// Initializes a new instance of the <see cref="NavigationItem" /> class.
        /// </summary>
        public NavigationItem() : base(CLASS_NAME)
        {
            mFields = new NavigationItemFields(this);
        }

        #endregion
    }
}